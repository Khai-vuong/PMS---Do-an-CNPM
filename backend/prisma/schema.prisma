generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  uid              String    @id @default(dbgenerated("\"substring\"((gen_random_uuid())::text, 1, 6)")) @db.Char(6)
  username         String    @unique
  password         String
  google_id        String?
  email            String
  mails            String[]  @default([])
  login_method     String    @default("LOCAL")
  files            File[]
  tasks            Task[]
  managed_projects Project[] @relation("ManagerProjects")
  project_ids      Project[] @relation("MemberProjects")
}

model Project {
  pid          String   @id @default(dbgenerated("\"substring\"((gen_random_uuid())::text, 1, 6)")) @db.Char(6)
  name         String
  description  String
  model        String
  phase        String
  created_time DateTime @default(now())
  files        File[]
  tasks        Task[]
  manager_ids  User[]   @relation("ManagerProjects")
  members      User[]   @relation("MemberProjects")
}

model Task {
  tid          String   @id @default(dbgenerated("\"substring\"((gen_random_uuid())::text, 1, 6)")) @db.Char(6)
  name         String
  description  String
  status       String   @default("Undone")
  comment      String?
  created_time DateTime @default(now())
  due          DateTime @default(dbgenerated("((now() + '7 days'::interval))::timestamp without time zone"))
  project_pid  String
  assignee_id  String
  files        File[]
  assignee     User     @relation(fields: [assignee_id], references: [uid])
  project      Project  @relation(fields: [project_pid], references: [pid])
}

model File {
  fid           String   @id @default(dbgenerated("\"substring\"((gen_random_uuid())::text, 1, 6)")) @db.Char(6)
  name          String
  extention     String
  size          String
  uploaded_time DateTime @default(now())
  project_pid   String
  task_tid      String
  uploader_id   String
  project       Project  @relation(fields: [project_pid], references: [pid])
  task          Task     @relation(fields: [task_tid], references: [tid])
  uploader      User     @relation(fields: [uploader_id], references: [uid])
}
